@using Phrazy.Client.Services
@using Phrazy.Shared.Models
@using System.Text
@inject IGameEngine _gameEngine
@inject IPuzzleService _puzzleService
@inject IJSRuntime _jsRuntime

<div id="dialog" class="@(_isOpen ? "open" : "")">
    <div>
        <div id="closeButton" @onclick="() => Toggle(false)">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
            </svg>
        </div>
        @if (_isShowResults && _gameEngine.GameState.Results != null)
        {
	        <div class="results">
		        <h2>@(_gameEngine.GameState.Results.IsWin ? "You Win!" : "You Lose!")</h2>
		        <div id="solution">@_gameEngine.GameState.Phrase</div>
		        <div id="scores">
			        <div>
				        <h3>Guesses</h3>
				        <p>❓@_gameEngine.GameState.Results.LettersUsed</p>
			        </div>
			        <div>
				        <h3>Time</h3>
				        <p>⏱️@TimeSpan.FromSeconds(_gameEngine.GameState.Results.Seconds).ToString(@"mm\:ss")</p>
			        </div>
		        </div>
	        </div>
	        <div class="text-center">
		        <button class="share btn" onclick="share('@GetShareToday()')">Share &nbsp;
			        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
				        <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
			        </svg>
				</button>
	        </div>
			<hr/>
        }
        <div class="results">
	        <h2>Last Available Rank</h2>
	        @if (_lastResult == null)
	        {
		        <div id="solution">No previous result found</div>
	        }
	        else
	        {
		        <div id="solution">@_lastResult.Phrase</div>
				@if (_lastResult.Phrase != Loading)
				{
					<p class="text-center">❓@_lastResult.Score ⏱️@TimeSpan.FromSeconds(_lastResult.Seconds).ToString(@"mm\:ss") Rank: @(_lastResult.Rank.ToString("N0")) / @_lastResult.UserCount.ToString("N0"), top @_percent</p>
				}
		        <div class="text-center">
			        <button class="btn share" onclick="share('@GetShareRank()')">Share &nbsp;
				        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
					        <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
				        </svg>
			        </button>
		        </div>
	        }
        </div>
        <hr/>
        <div id="rules">
            <h2>How To Play Phrazy</h2>
	        <p>Choose letters to guess the phrase. Press solve when you're ready to fill in the blanks. Try to solve with as few letters and as fast as possible for the best rank! <span class="key">key</span> colors show a <span class="key hit">hit</span> or <span class="key miss">miss</span>. You lose if you pick every letter in the phrase, or the whole alphabet.</p>
	        <p>Your rank for the last game you played is usually updated by early morning (US).</p>
        </div>
        <div id="copyright">
            <p>&copy;@DateTime.Now.Year, POP World Media, LLC - <a href="/privacy.html" target="_blank">Privacy/Legal</a></p>
        </div>
    </div>
</div>

@code {
    private bool _isShowResults;
    private bool _isOpen;
	private LastResultPayload? _lastResult;
	private string _percent = string.Empty;
	    
	private const string Loading = "LOADING...";

    protected override void OnInitialized()
    {
	    _lastResult = new LastResultPayload {Phrase = Loading};
        _isOpen = true;
        _gameEngine.OnDialogOpen += Toggle;
	    _gameEngine.OnBoardLoad += RefreshForResults;
    }

	private void RefreshForResults()
	{
		_isShowResults = _gameEngine.GameState.Results != null;
	    _lastResult = _gameEngine.LastResultPayload;
		if (_lastResult != null && _lastResult.Rank != 0 && _lastResult.UserCount != 0)
		{
			var percent = (double)_lastResult.Rank / _lastResult.UserCount;
			if (percent < .01) percent = .01;
			_percent = percent.ToString("P1");
		}
		StateHasChanged();
	}

    private void Toggle(bool isOpen)
    {
        _isOpen = isOpen;
        _isShowResults = _gameEngine.GameState.Results != null;
        StateHasChanged();
    }

	private void UpdateLastResult(LastResultPayload payload)
	{
		_lastResult = payload;
		StateHasChanged();
	}

	private string GetShareToday(){
		if (_gameEngine.GameState.Results == null)
			return string.Empty;
		var s = new StringBuilder();
		s.Append($"Phrazy.net ❓{_gameEngine.GameState.Results.LettersUsed} ⏱️{TimeSpan.FromSeconds(_gameEngine.GameState.Results.Seconds).ToString(@"mm\:ss")}\\n");
		foreach (var guess in _gameEngine.GameState.GuessRecords)
		{
			if (guess.IsCorrect)
				s.Append("🟩");
			else
				s.Append("🟥");
		}
		var text = s.ToString();
		return text;
	}

	private string GetShareRank()
	{
		if (_lastResult == null)
			return string.Empty;
		var formattedDate = $"{_lastResult.TimeStamp.Month}/{_lastResult.TimeStamp.Day}";
		var text = $"Phrazy.net {formattedDate}\\n\"{_lastResult.Phrase.ToUpper()}\"\\n❓{_lastResult.Score} ⏱️{TimeSpan.FromSeconds(_lastResult.Seconds).ToString(@"mm\:ss")} Rank: {_lastResult.Rank.ToString("N0")}/{_lastResult.UserCount.ToString("N0")}, top {_percent}";
		return text;
	}
}
